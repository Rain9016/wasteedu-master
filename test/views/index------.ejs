<!DOCTYPE HTML>
<html>
<head>
	<meta name="viewport" content="user-scalable=no"/>


	<title>pixi.js example 1</title>

	<style>



		/*div.main {*/
			/*width: 62.5%;*/
			/*float: left;*/
		/*}*/
		/*div.aside {*/
			/*width: 31.25%;*/
			/*float: right;*/
		/*}*/


	</style>


	<style>
		@media (device-width:375px) and (-webkit-min-device-pixel-ratio:3.0){/* 兼容iphone6 plus */
			body {
				margin: 0;
				padding: 0;
				background-repeat: no-repeat;
				background-image: url("images/game/bg1242-2280.png");


			}
		}

	</style>
	
<script src="javascripts/pixi.js"></script>
</head>
<body>


<script>


	var round = 0;
	var totalround = 3;
	var totalScore =0;
	var totlalError  =0;
    var maxError=2;

	var selectedRightColor = 0;
	var totalRightColor = 4;

	var maskSpriteArray  = new Array(4)

			for(var i =0; i< maskSpriteArray.length; i++){
				maskSpriteArray[i] = new Array(3);
			};

//	for(var i =0;i<12;i++){
//
//		var tempsprit = new PIXI.Sprite();
//		tempsprit.tint = 0x000000;
//		tempsprit.height = window.innerWidth/5.2;
//		tempsprit.width = tempsprit.height;
//		maskSpriteArray.push();
//
//	}

	//---------------------------------------------------------------------------- waste pic


	var wasteCollection  =[[0,'images/plastic_bottle_empty.png','Plastic Bottle'],[1,'images/plastic_bag.png','Plastic Bag'],[2,'images/appple_core.png','Apple Core']]


	var wasteCollectionOrder  = new Array(wasteCollection.length);

	for(var i =0;i<wasteCollection.length; i++)
	{
		wasteCollectionOrder[i] = i;
	}


	for(i=0;i<48;i++){
		var from = Math.floor(Math.random()*3);
		var to = Math.floor(Math.random()*3);
		var tmp = wasteCollectionOrder[from];
		wasteCollectionOrder[from]=wasteCollectionOrder[to];
		wasteCollectionOrder[to]=tmp;
	}



	//---------------------------------------------------------------------------- radom the colors

	var chosenTiles = new Array();

			for(i=0;i<12;i++){
				chosenTiles.push(Math.floor(i/4));
			}


			// shuffle the chosen tiles
			for(i=0;i<48;i++){
				var from = Math.floor(Math.random()*12);
				var to = Math.floor(Math.random()*12);
				var tmp = chosenTiles[from];
				chosenTiles[from]=chosenTiles[to];
				chosenTiles[to]=tmp;
			}


	for(var i =0; i <12;i++){

		var tempSprite = new  PIXI.Sprite();
		tempSprite.height = window.innerWidth/5.2;
		tempSprite.width = tempSprite.height;
		if(chosenTiles[i]==0){                    // yellow
			tempSprite.tint = 0xeee570;
		}else if (chosenTiles[i]==1){            // greeen
			tempSprite.tint = 0x2cc26f;
		}else if(chosenTiles[i]==2){
			tempSprite.tint = 0xff0000;          // red
		};
		maskSpriteArray[Math.floor(i/3)][Math.floor(i%3)] = tempSprite;
	}


	//---------------------------------------------------------------------------- waste pic

	var bgPic = PIXI.Sprite.fromImage('images/logo-nobg.png');
	bgPic.anchor.set(0.5);

	bgPic.position.x =  window.innerWidth+210;
	bgPic.position.y =   window.innerHeight/2;


	//-----------------------------------------------------------------

	// Offset of each block
	var offset = window.innerWidth/38;


	// Basic settings
	var objectNumber = 3;
//	var objectWidth = 180;

//	var objectWidth = window.innerWidth/5.2;

//	alert( window.innerWidth);
	var objectWidth = 190;

	var renderer = new PIXI.CanvasRenderer(window.innerWidth, window.innerHeight)
	renderer.backgroundColor = 0x005a9c;

	document.body.appendChild(renderer.view);

	var stage = new PIXI.Container();

	var graphics = new PIXI.Graphics();


//------------------------------------------------------------------------------ waste label board

	var wastelabelboardWidth = (window.innerWidth)/1.35;
	var wastelabelboardHight = (window.innerHeight)/4;


	var wastelabelboardZoonstartX =  0;
	var wastelabelboardZoonstartY = window.innerHeight/18;


	graphics.moveTo(wastelabelboardZoonstartX, wastelabelboardZoonstartY);
	graphics.beginFill(0x002866,0.9);
	graphics.drawRoundedRect(wastelabelboardZoonstartX, wastelabelboardZoonstartY, wastelabelboardWidth, wastelabelboardHight, 10);
	graphics.endFill();



//------------------------------------------------------------------------------ time&&score bar
	var timescoreBarHigh = 80;
	var timescoreBarX = 0;
	var timescoreBarY = wastelabelboardZoonstartY + wastelabelboardHight - timescoreBarHigh;
	var timescoreBarWidth = wastelabelboardWidth;


	graphics.moveTo(timescoreBarX, timescoreBarX);
	graphics.beginFill(0x3498db,1);

	graphics.drawRect(timescoreBarX, timescoreBarY, timescoreBarWidth, timescoreBarHigh);

	graphics.endFill();




	//------------------------------------------------------------------------------ waste board
	var wasteboardRadius1 = (window.innerHeight)/7.1;
	var wastboardRadius2 = (window.innerHeight)/6.25;

	var wasteboardCenterX = wastelabelboardWidth ;
	var wasteboardCenterY = wastelabelboardZoonstartY+(wastelabelboardHight/2);

	graphics.moveTo(wasteboardCenterX, wasteboardCenterY);
	graphics.beginFill(0xfacd89, 1);
	graphics.drawCircle(wasteboardCenterX, wasteboardCenterY,wastboardRadius2);
	graphics.endFill();

	graphics.beginFill(0xffffff, 1);
	graphics.drawCircle(wasteboardCenterX, wasteboardCenterY,wasteboardRadius1);
	graphics.endFill();

	//------------------------------------------------------------------------------ waste board pic

	var indexpic  = wasteCollectionOrder[0];
	var wastePic = PIXI.Sprite.fromImage(wasteCollection[indexpic][1]);
	wastePic.anchor.x =0.5;
	wastePic.anchor.y =0.5;

//	wastePic.scale = 1;

	wastePic.position.x = wasteboardCenterX;
	wastePic.position.y = wasteboardCenterY;

	//------------------------------------------------------------------------------ waste label text

	var wasteLabel = new PIXI.Text(wasteCollection[indexpic][2],{font : '80px Constantia', fill : 0xFFFFFF, align : 'center center'});
	wasteLabel.anchor.x = 0.5;
	wasteLabel.anchor.y = 0.5;
	wasteLabel.position.x = ((wastelabelboardWidth - wastboardRadius2))/2;
	wasteLabel.position.y = wastelabelboardZoonstartY + (wastelabelboardHight-timescoreBarHigh)/2;


	//------------------------------------------------------------------------------ time text


	var countingText = new PIXI.Text('Time Left: 60', { font: '35px Arial', fill: '#f1c40f', align: 'center' });
	countingText.anchor.x = 0.5;
	countingText.anchor.y =0.5;
	countingText.position.x = (wastelabelboardWidth - wastboardRadius2)/4;
	countingText.position.y = wastelabelboardZoonstartY + (wastelabelboardHight-timescoreBarHigh)+(timescoreBarHigh)/2;


	//------------------------------------------------------------------------------ score text

	var totalScoreText = new PIXI.Text('Total Score: 0', { font: '35px Arial', fill: '#f1c40f', align: 'center' });

	totalScoreText.anchor.x = 0.5;
	totalScoreText.anchor.y = 0.5;
	totalScoreText.position.x = countingText.position.x +(countingText.width)+40;
	totalScoreText.position.y = countingText.position.y ;


	//------------------------------------------------------------------------------ gameZone


	var totalWidth = objectNumber*objectWidth+(objectNumber+1)*offset;
	var totalHight  = (objectNumber+1)*objectWidth+(objectNumber+2)*offset;

	// Position of the inside window
	var gameZoonstartX = (window.innerWidth-totalWidth)/2;
	var gameZooonstartY = (window.innerHeight-totalHight)/1.1;

	// Initial position
	graphics.moveTo(gameZoonstartX, gameZooonstartY);


	graphics.beginFill(0x002866,0.5);
	graphics.drawRoundedRect(gameZoonstartX, gameZooonstartY, totalWidth, totalHight, 10);
	graphics.endFill();

	stage.addChild(graphics);
	renderer.render(stage);

//----------------------------------------------------------------------------------place mask


var gamecontianer = new PIXI.Container();

var canPick = true;
var index =0;

	var maskArray  = new Array();



	placeTiles();


	function placeTiles(){


		var chosenTiles = new Array();

		for(i=0;i<12;i++){
			chosenTiles.push(Math.floor(i/4));
		}


		// shuffle the chosen tiles
		for(i=0;i<48;i++){
			var from = Math.floor(Math.random()*12);
			var to = Math.floor(Math.random()*12);
			var tmp = chosenTiles[from];
			chosenTiles[from]=chosenTiles[to];
			chosenTiles[to]=tmp;
		}

	for (var j = 0; j <= 3; j++) {

		for (var i = 0; i < 3; i++) {
			var tile = PIXI.Sprite.fromImage('images/'+chosenTiles[index]+'.png');

			maskArray.push(tile);

			tile.buttonMode = true;
			tile.interactive = true;
			// is the tile selected?
			tile.isSelected = false;
			// set a tile value
			tile.theVal = chosenTiles[index];

			index++;
			// place the tile
			tile.position.x = gameZoonstartX+ (totalWidth -200*3)/4  + i * 200+(totalWidth -200*3)/3 ;
			tile.position.y = gameZooonstartY + (totalHight -200*4)/2 + j * 200;
			// paint tile black
			tile.tint = 0x000000;
			// set it a bit transparent (it will look grey)
			tile.alpha = 1;
			// add the tile
			stage.addChild(tile);
			// mouse-touch listener

			var selectedTile = null;
			tile.mousedown = tile.touchstart = function (data) {

				// can I pick a tile?
				if (canPick) {


					if (!this.isSelected) {

//						alert(this.theVal);

						this.isSelected = true;
						selectedTile = this;

						this.tint = 0xffffff;
						this.alpha = 1;

						if (this.theVal == wasteCollection[indexpic][round]) {

							var texture = PIXI.Texture.fromImage('images/'+(selectedTile.theVal + 6)+'.png');

							this.setTexture(texture);


							totalScore += 20;
							totalScoreText.text =  'Total Score: '+ totalScore;
//							alert('pick red right!');
							selectedRightColor++;

							if (selectedRightColor == totalRightColor) {

								selectedRightColor == 0;


								richText.text = "You Win!"
								stage.addChild(richText);

								round++;

								placeTiles();

								renderer.render(stage);


							}

						}
						else {



							var texture = PIXI.Texture.fromImage('images/'+(selectedTile.theVal + 3)+'.png');



							selectedTile.setTexture(texture);

							totlalError ++;

							if(totlalError >= maxError){

								richText.text = "Game Over!"
								stage.addChild(richText);
								renderer.render(stage);
								canPick = false;

							}

							// wait a second then cover the tiles and make the player able to pick again


//							setTimeout(function () {
//
//
//								selectedTile.tint = 0x000000;
//
//								selectedTile.alpha = 0.5;
//
//
//								//selectedTile.setTexture(PIXI.Texture.fromImage(selectedTile.theVal-3));
//
//							}, 500);


						}

					}

				}
			}
		}
//
//	var totalRightColor =4;
//
//	var selectedRightColor = 0;
//	// first tile picked up by the player
//	var firstTile=null;
//	// second tile picked up by the player
//	var secondTile=null;
//	// Third tile picked up by the player
//	var thirdTile=null;
//	// can the player pick up a tile?
//	var canPick=true;
//
//	// importing a texture atlas created with texturepacker
//	var tileAtlas = ["javascripts/images.json"];
//	// create a new loader
//	var loader = new PIXI.loaders.Loader(tileAtlas);
//
//	loader.add();
//	// use callback
//	loader.onComplete = onTilesLoaded
//	//begin load
//	loader.load();
//
//	function onTilesLoaded(){
//		// choose 24 random tile images
//		var chosenTiles=new Array();
//
//		for(i=0;i<12;i++){
//			chosenTiles.push(Math.floor(i/4));
//		}
//
//
//		// shuffle the chosen tiles
//		for(i=0;i<48;i++){
//			var from = Math.floor(Math.random()*12);
//			var to = Math.floor(Math.random()*12);
//			var tmp = chosenTiles[from];
//			chosenTiles[from]=chosenTiles[to];
//			chosenTiles[to]=tmp;
//		}
//		// place down tiles
//		for(i=0;i<3;i++){
//			for(j=0;j<4;j++){
//				// new sprite
//				var tile = PIXI.Sprite.fromFrame(chosenTiles[i*4+j]);
//				// buttonmode+interactive = acts like a button
//				tile.buttonMode=true;
//				tile.interactive = true;
//				// is the tile selected?
//				tile.isSelected=false;
//				// set a tile value
//				tile.theVal=chosenTiles[i*4+j]
//				// place the tile
//				tile.position.x = 7+i*80;
//				tile.position.y = 7+  j*80;
//				// paint tile black
//				tile.tint = 0x000000;
//				// set it a bit transparent (it will look grey)
//				tile.alpha=0.5;
//				// add the tile
//				gameContainer.addChild(tile);
//				// mouse-touch listener
//
//				var selectedTile = null;
//				tile.mousedown = tile.touchstart = function(data){
//
//					// can I pick a tile?
//					if(canPick) {
//
//
//						if(!this.isSelected){
//
//							selectedTile =  this;
//
//							this.tint = 0xffffff;
//							this.alpha = 1;
//
//							if(this.theVal ==0){
//
//
//
//								alert('pick red right!');
//								selectedRightColor++;
//
//								if(selectedRightColor==totalRightColor){
//
//									selectedRightColor ==0;
//
//									alert('you have found all red blocks');
//								}
//
//							}
//							else{
//								selectedTile.setTexture(PIXI.Texture.fromImage(selectedTile.theVal+3));
//
//
//								// wait a second then cover the tiles and make the player able to pick again
//
//
//								setTimeout(function(){
//
//									selectedTile.tint = 0x000000;
//
//									selectedTile.alpha=0.5;
//
//
//
//									//selectedTile.setTexture(PIXI.Texture.fromImage(selectedTile.theVal-3));
//
//								},1000);
//
//
//							}
//
//						}
//
//
//
//					}
//				}
//			}
//		}
//
//		//renderer.render(stage);
//		requestAnimFrame(animate);
//
//	}






		}
	}


//----------------------------------------------------------------------------------------------------------------------- set 3 seconds masked tile

	setTimeout(function () {

		                      for(var i =0; i <maskArray.length;i++){

								  maskArray[i].tint = 0xffffff;
								  maskArray[i].alpha = 1;

							  }



								//selectedTile.setTexture(PIXI.Texture.fromImage(selectedTile.theVal-3));

							}, 4000);

	//----------------------------------------------------------------------------------------------------------------------- set 3 seconds unmask tile


	var style = {
		font : 'bold italic 200px Arial',
		fill : '#F7EDCA',
		stroke : '#4a1850',
		strokeThickness : 5,
		dropShadow : true,
		dropShadowColor : '#000000',
		dropShadowAngle : Math.PI / 6,
		dropShadowDistance : 6,
		wordWrap : true,
		wordWrapWidth : 440
	};


	var richText = new PIXI.Text('3',style);
	richText.anchor.x = 0.5;
	richText.anchor.y = 0.5;
	richText.x = window.innerWidth/2;
	richText.y = window.innerHeight/1.75;
	richText.alpha = 0.9;



	var second=3;
	var timer;
	function countdown5seconds()
	{
		second--;

		if(second>=0)
		{
			timer = setTimeout('countdown5seconds()',1000);//调用自身实现
			richText.text = second;
		}
		else if (second == -1){

			richText.text = "Start!"
			timer = setTimeout('countdown5seconds()',1000);
		}
		else if (second < -1)
		{

			stage.removeChild(richText);
			canPick = true;
			clearTimeout(timer);
		}
	}

	timer = countdown5seconds('countdown5seconds()',1000);

	//----------------------------------------------------------------------------------------------------------------------- set 30 seconds game time


    var gameTimer;
	var gameTime =  30;
	countingText.text = 'Time Left: ' + Math.floor(gameTime);

	function countdown30secondsgametime()
	{
		gameTime--;

		if(gameTime>=0)
		{
			gameTimer = setTimeout('countdown30secondsgametime()',1000);//调用自身实现
			countingText.text = 'Time Left: '+gameTime;
		}
		else if (gameTime -1){



			richText.text = "Time Up!"
			stage.addChild(richText);
			renderer.render(stage);
			canPick = false;
		}

	}

	gameTimer = countdown30secondsgametime('countdown30secondsgametime()',1000);




	//stage.addChild(bgPic);
	stage.addChild(totalScoreText);
	stage.addChild(richText);
	stage.addChild(wastePic);
	stage.addChild(wasteLabel);
	stage.addChild(countingText);

	renderer.render(stage);
						var count = 0;
						animate();
						function animate() {

//							if (count >= 400) {
//								count = 0;
//							} else {
//								count += 0.05;
//							}
//							// update the text with a new string
//							countingText.text = 'Time Left: ' + Math.floor(count);

							bgPic.rotation += 0.01;
							renderer.render(stage);
							requestAnimationFrame(animate);

						}

</script>
	</body>
</html>
